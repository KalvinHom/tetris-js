{"version":3,"sources":["webpack:///./src/piece.js","webpack:///./src/l_piece.js","webpack:///./src/game.js","webpack:///./src/l2_piece.js","webpack:///./src/z_piece.js","webpack:///./src/z2_piece.js","webpack:///./src/t_piece.js","webpack:///./src/line_piece.js","webpack:///./src/o_piece.js","webpack:///./src/script.js","webpack:///./src/board.js","webpack:///./src/canvas.js","webpack:///./src/constants.js"],"names":["constructor","this","rotation_index","rotations","getShape","rotate","direction","limit","length","Piece","super","color","PIECES","LPiece","RESTART","x","y","width","height","game","setDefaults","handleRestart","bind","board","Array","fill","map","clearLines","linesCleared","i","filledLine","j","splice","unshift","isSpotAvailable","piece","shape","placePiece","canvas","boardPosX","boardPosY","cellSize","levelPosX","levelPosY","scorePosX","scorePosY","previewX","previewY","boarderColor","borderThickness","document","querySelector","window","innerWidth","innerHeight","context","getContext","drawBorders","boardBorder","beginPath","lineWidth","moveTo","lineTo","closePath","strokeStyle","borderColor","stroke","drawGrid","boardRight","boardBottom","drawBoard","clearRect","drawSquare","drawLevel","level","font","fillStyle","fillText","drawScore","score","drawPiecePreview","scoreBorder","drawPiece","posX","posY","fillRect","drawRestart","rect","drawControls","state","gameSpeed","speedMode","speedAmount","numClears","startGame","lastRenderTime","Date","now","setNextPiece","requestAnimationFrame","tick","restartGame","removeEventListener","gameOver","currentPiece","render","rand","Math","floor","random","nextPiece","movePiece","dir","pieceX","pieceY","incrementPiece","addScore","addLevel","placeNewPiece","rotatedPiece","Object","assign","create","getPrototypeOf","verifyRotation","offset","pow","speedOn","speedOff","showRestart","addEventListener","getMousePos","event","getBoundingClientRect","clientX","left","clientY","top","isInside","pos","evt","mousePos","fired","key"],"mappings":"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","file":"bundle.522a0aa347a727944376.js","sourcesContent":["class Piece {\r\n  constructor() {\r\n    this.rotation_index = 0;\r\n    this.rotations = [];\r\n  }\r\n\r\n  getShape() {\r\n    return this.rotations[this.rotation_index];\r\n  }\r\n  rotate(direction) {\r\n    const limit = this.rotations.length;\r\n    this.rotation_index = this.rotation_index + direction;\r\n    if (this.rotation_index >= limit) {\r\n      this.rotation_index = 0;\r\n    }\r\n    if (this.rotation_index < 0) this.rotation_index = limit - 1;\r\n  }\r\n}\r\n\r\nexport default Piece;\r\n","import Piece from \"./piece\";\r\n\r\nclass LPiece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"green\";\r\n    this.rotations = [\r\n      [\r\n        [0, 0, 1],\r\n        [1, 1, 1],\r\n        [0, 0, 0],\r\n      ],\r\n      [\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 1],\r\n      ],\r\n      [\r\n        [0, 0, 0],\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n      ],\r\n\r\n      [\r\n        [1, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default LPiece;\r\n","import Board from \"./board\";\r\nimport Canvas from \"./canvas\";\r\nimport LinePiece from \"./line_piece\";\r\nimport LPiece from \"./l_piece\";\r\nimport L2Piece from \"./l2_piece\";\r\nimport OPiece from \"./o_piece\";\r\nimport ZPiece from \"./z_piece\";\r\nimport Z2Piece from \"./z2_piece\";\r\nimport TPiece from \"./t_piece\";\r\n\r\nconst PIECES = [LPiece, L2Piece, ZPiece, Z2Piece, TPiece, LinePiece, OPiece];\r\n\r\nconst ALIVE = 0;\r\nconst GAMEOVER = 1;\r\n\r\nconst RESTART = {\r\n  x: 500,\r\n  y: 500,\r\n  width: 250,\r\n  height: 100,\r\n};\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.setDefaults();\r\n    this.handleRestart = this.handleRestart.bind(this);\r\n  }\r\n\r\n  setDefaults() {\r\n    this.board = new Board(10, 25);\r\n    this.canvas = new Canvas(this.board);\r\n    this.state = ALIVE;\r\n    this.gameSpeed = 1000;\r\n    this.speedMode = false;\r\n    this.speedAmount = 10;\r\n    this.level = 1;\r\n    this.score = 0;\r\n    this.numClears = 0;\r\n  }\r\n\r\n  startGame() {\r\n    this.lastRenderTime = Date.now();\r\n    this.setNextPiece();\r\n    window.requestAnimationFrame(this.tick.bind(this));\r\n  }\r\n\r\n  restartGame() {\r\n    this.setDefaults();\r\n    this.canvas.canvas.removeEventListener(\"click\", this.handleRestart, false);\r\n    this.startGame();\r\n  }\r\n\r\n  gameOver() {\r\n    this.state = GAMEOVER;\r\n    this.canvas.drawPiece(this.currentPiece);\r\n    this.canvas.drawRestart();\r\n    this.render();\r\n  }\r\n\r\n  setNextPiece() {\r\n    const rand = Math.floor(Math.random() * 7);\r\n    this.nextPiece = new PIECES[rand]();\r\n  }\r\n\r\n  movePiece(dir) {\r\n    const available = this.board.isSpotAvailable(\r\n      this.currentPiece,\r\n      this.pieceX + dir,\r\n      this.pieceY\r\n    );\r\n    if (available) this.pieceX += dir;\r\n    this.render();\r\n  }\r\n\r\n  incrementPiece() {\r\n    const available = this.board.isSpotAvailable(\r\n      this.currentPiece,\r\n      this.pieceX,\r\n      this.pieceY + 1\r\n    );\r\n\r\n    if (available) this.pieceY = this.pieceY + 1;\r\n    else {\r\n      this.board.placePiece(this.currentPiece, this.pieceX, this.pieceY);\r\n      const linesCleared = this.board.clearLines();\r\n      if (linesCleared > 0) this.numClears++;\r\n\r\n      this.addScore(linesCleared);\r\n      this.addLevel();\r\n      this.placeNewPiece(this.currentPiece);\r\n    }\r\n  }\r\n\r\n  placeNewPiece() {\r\n    const piece = this.nextPiece;\r\n    this.setNextPiece();\r\n    this.currentPiece = piece;\r\n    this.pieceX = 3;\r\n    this.pieceY = 0;\r\n\r\n    const available = this.board.isSpotAvailable(\r\n      this.currentPiece,\r\n      this.pieceX,\r\n      this.pieceY\r\n    );\r\n    if (!available) this.gameOver();\r\n  }\r\n\r\n  rotate(direction) {\r\n    let rotatedPiece = Object.assign(\r\n      Object.create(Object.getPrototypeOf(this.currentPiece)),\r\n      this.currentPiece\r\n    );\r\n    rotatedPiece.rotate(direction);\r\n    const isValid = this.verifyRotation(rotatedPiece, 0);\r\n    if (isValid) this.currentPiece = rotatedPiece;\r\n    this.render();\r\n  }\r\n\r\n  // if the rotated piece doesn't fit its spot, attempt to shift it one right\r\n  // and then one left.  If no result fits, the piece does not rotate.\r\n  verifyRotation(piece, offset) {\r\n    const isValid = this.board.isSpotAvailable(\r\n      piece,\r\n      this.pieceX + offset,\r\n      this.pieceY\r\n    );\r\n    if (isValid) {\r\n      this.pieceX += offset;\r\n      return true;\r\n    }\r\n    if (offset == 0) return this.verifyRotation(piece, 1);\r\n    if (offset == 1) return this.verifyRotation(piece, -1);\r\n    return false;\r\n  }\r\n\r\n  addScore(linesCleared) {\r\n    if (linesCleared > 0) {\r\n      this.score += this.level * Math.pow(2, linesCleared - 1) * 100;\r\n    }\r\n  }\r\n  addLevel() {\r\n    if (this.score / 1000 / this.level > this.level) {\r\n      this.level++;\r\n      this.gameSpeed / 2;\r\n    }\r\n  }\r\n\r\n  speedOn() {\r\n    this.speedMode = true;\r\n  }\r\n\r\n  speedOff() {\r\n    this.speedMode = false;\r\n  }\r\n  showRestart() {\r\n    const base = this;\r\n    this.canvas.canvas.addEventListener(\"click\", this.handleRestart, false);\r\n    this.canvas.drawRestart();\r\n  }\r\n\r\n  tick() {\r\n    if (this.state == GAMEOVER) {\r\n      this.showRestart();\r\n      return;\r\n    }\r\n    const elapsed = Date.now() - this.lastRenderTime;\r\n    const speed = this.speedMode ? this.speedAmount : this.gameSpeed;\r\n\r\n    if (elapsed > speed) {\r\n      this.canvas.drawBoard();\r\n      if (!this.currentPiece) this.placeNewPiece();\r\n      else this.incrementPiece();\r\n      this.render();\r\n\r\n      this.lastRenderTime = Date.now();\r\n    }\r\n    window.requestAnimationFrame(this.tick.bind(this));\r\n  }\r\n\r\n  render() {\r\n    this.canvas.drawBoard();\r\n    this.canvas.drawScore(this.score);\r\n    this.canvas.drawPiecePreview(this.nextPiece);\r\n    this.canvas.drawLevel(this.level);\r\n    this.canvas.drawControls();\r\n\r\n    if (this.state == GAMEOVER) {\r\n      this.showRestart();\r\n      return;\r\n    }\r\n\r\n    if (this.currentPiece)\r\n      this.canvas.drawPiece(this.currentPiece, this.pieceX, this.pieceY);\r\n  }\r\n\r\n  getMousePos(canvas, event) {\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: event.clientX - rect.left,\r\n      y: event.clientY - rect.top,\r\n    };\r\n  }\r\n\r\n  isInside(pos, rect) {\r\n    return (\r\n      pos.x > rect.x &&\r\n      pos.x < rect.x + rect.width &&\r\n      pos.y < rect.y + rect.height &&\r\n      pos.y > rect.y\r\n    );\r\n  }\r\n\r\n  handleRestart(evt) {\r\n    var mousePos = this.getMousePos(this.canvas.canvas, evt);\r\n    if (this.isInside(mousePos, RESTART)) {\r\n      this.restartGame();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import Piece from \"./piece\";\r\n\r\nclass L2Piece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"red\";\r\n    this.rotations = [\r\n      [\r\n        [0, 0, 0],\r\n        [1, 1, 1],\r\n        [0, 0, 1],\r\n      ],\r\n      [\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [1, 1, 0],\r\n      ],\r\n      [\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n        [0, 0, 0],\r\n      ],\r\n\r\n      [\r\n        [0, 1, 1],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default L2Piece;\r\n","import Piece from \"./piece\";\r\n\r\nclass ZPiece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"cyan\";\r\n    this.rotations = [\r\n      [\r\n        [0, 0, 0],\r\n        [1, 1, 0],\r\n        [0, 1, 1],\r\n      ],\r\n      [\r\n        [0, 0, 1],\r\n        [0, 1, 1],\r\n        [0, 1, 0],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default ZPiece;\r\n","import Piece from \"./piece\";\r\n\r\nclass Z2Piece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"orange\";\r\n    this.rotations = [\r\n      [\r\n        [0, 0, 0],\r\n        [0, 1, 1],\r\n        [1, 1, 0],\r\n      ],\r\n      [\r\n        [1, 0, 0],\r\n        [1, 1, 0],\r\n        [0, 1, 0],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Z2Piece;\r\n","import Piece from \"./piece\";\r\n\r\nclass TPiece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"pink\";\r\n    this.rotations = [\r\n      [\r\n        [0, 1, 0],\r\n        [1, 1, 1],\r\n        [0, 0, 0],\r\n      ],\r\n      [\r\n        [0, 1, 0],\r\n        [0, 1, 1],\r\n        [0, 1, 0],\r\n      ],\r\n      [\r\n        [0, 0, 0],\r\n        [1, 1, 1],\r\n        [0, 1, 0],\r\n      ],\r\n\r\n      [\r\n        [0, 1, 0],\r\n        [1, 1, 0],\r\n        [0, 1, 0],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default TPiece;\r\n","import Piece from \"./piece\";\r\n\r\nclass LinePiece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"blue\";\r\n    this.rotations = [\r\n      [\r\n        [0, 0, 0, 0],\r\n        [1, 1, 1, 1],\r\n        [0, 0, 0, 0],\r\n        [0, 0, 0, 0],\r\n      ],\r\n      [\r\n        [0, 1, 0, 0],\r\n        [0, 1, 0, 0],\r\n        [0, 1, 0, 0],\r\n        [0, 1, 0, 0],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default LinePiece;\r\n","import Piece from \"./piece\";\r\n\r\nclass OPiece extends Piece {\r\n  constructor() {\r\n    super();\r\n    this.color = \"yellow\";\r\n    this.rotations = [\r\n      [\r\n        [1, 1],\r\n        [1, 1],\r\n      ],\r\n    ];\r\n  }\r\n}\r\n\r\nexport default OPiece;\r\n","import LPiece from \"./l_piece\";\r\nimport Board from \"./board\";\r\nimport Canvas from \"./canvas\";\r\nimport Game from \"./game\";\r\nimport \"./style.css\";\r\nimport { CLOCKWISE, COUNTERCLOCKWISE } from \"./constants\";\r\nconst LEFT = -1;\r\nconst RIGHT = 1;\r\n\r\nconst piece = new LPiece();\r\n\r\nconst game = new Game();\r\ngame.startGame();\r\n\r\nlet fired = false;\r\nwindow.addEventListener(\"keydown\", function (event) {\r\n  if (fired) return;\r\n  fired = true;\r\n  event.key;\r\n  switch (event.key) {\r\n    case \"ArrowLeft\":\r\n    case \"a\":\r\n      game.movePiece(LEFT);\r\n      break;\r\n    case \"ArrowRight\":\r\n    case \"d\":\r\n      game.movePiece(RIGHT);\r\n      break;\r\n    case \"ArrowDown\":\r\n    case \"s\":\r\n      game.speedOn();\r\n      break;\r\n    case \"q\":\r\n      game.rotate(COUNTERCLOCKWISE);\r\n      break;\r\n    case \"e\":\r\n      game.rotate(CLOCKWISE);\r\n      break;\r\n    default:\r\n      fired = false;\r\n\r\n      return;\r\n  }\r\n  fired = false;\r\n});\r\n\r\nwindow.addEventListener(\"keyup\", function (event) {\r\n  switch (event.key) {\r\n    case \"ArrowDown\":\r\n    case \"s\":\r\n      game.speedOff();\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n});\r\n","class Board {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.board = Array(this.height)\r\n      .fill()\r\n      .map(() => Array(this.width));\r\n  }\r\n\r\n  clearLines() {\r\n    let linesCleared = 0;\r\n    let i = this.height - 1;\r\n    while (i > 0) {\r\n      let filledLine = true;\r\n      for (let j = 0; j < this.width; j++) {\r\n        if (this.board[i][j] == null) {\r\n          filledLine = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (filledLine) {\r\n        this.board.splice(i, 1);\r\n        this.board.unshift(Array(this.width));\r\n        linesCleared++;\r\n      } else {\r\n        i--;\r\n      }\r\n    }\r\n    return linesCleared;\r\n  }\r\n\r\n  isSpotAvailable(piece, x, y) {\r\n    if (y >= this.height) return false;\r\n\r\n    const shape = piece.getShape();\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      for (let j = 0; j < shape[i].length; ++j) {\r\n        if (shape[j][i] != 0) {\r\n          if (y + j >= this.height) return false;\r\n          if (x + i < 0 || x + i >= this.width) return false;\r\n          if (this.board[y + j][x + i] != null) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  placePiece(piece, x, y) {\r\n    const shape = piece.getShape();\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      for (let j = 0; j < shape[i].length; ++j) {\r\n        if (shape[j][i] != 0) {\r\n          this.board[y + j][x + i] = piece.color;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import Board from \"./board\";\r\nimport { HIDDEN_ROWS } from \"./constants\";\r\n\r\n// this class focuses on how to draw elements\r\nclass Canvas {\r\n  constructor(board) {\r\n    this.boardPosX = 28;\r\n    this.boardPosY = 28;\r\n    this.cellSize = 28;\r\n\r\n    this.levelPosX = 450;\r\n    this.levelPosY = 375;\r\n    this.scorePosX = 450;\r\n    this.scorePosY = 428;\r\n\r\n    this.previewX = 400;\r\n    this.previewY = 120;\r\n\r\n    this.board = board;\r\n    this.boarderColor = \"#fff\";\r\n    this.borderThickness = 0.5;\r\n\r\n    this.canvas = document.querySelector(\"canvas.tetris\");\r\n\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n    this.context = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  drawBorders() {\r\n    const boardBorder = [\r\n      this.boardPosX - this.borderThickness,\r\n      this.boardPosY + HIDDEN_ROWS * this.cellSize - this.borderThickness,\r\n      this.borderThickness + this.boardPosX + this.board.width * this.cellSize,\r\n      this.borderThickness + this.boardPosY + this.board.height * this.cellSize,\r\n    ];\r\n    this.context.beginPath();\r\n    this.context.lineWidth = 1;\r\n    this.context.moveTo(boardBorder[0], boardBorder[1]);\r\n    this.context.lineTo(boardBorder[2], boardBorder[1]);\r\n    this.context.lineTo(boardBorder[2], boardBorder[3]);\r\n    this.context.lineTo(boardBorder[0], boardBorder[3]);\r\n    this.context.closePath();\r\n    this.context.strokeStyle = this.borderColor;\r\n\r\n    this.context.stroke();\r\n  }\r\n\r\n  drawGrid() {\r\n    // horizontal lines\r\n    this.context.strokeStyle = this.borderColor;\r\n    this.context.lineWidth = 0.5;\r\n\r\n    const boardRight = this.boardPosX + this.cellSize * this.board.width;\r\n    for (let i = 3; i < this.board.height; i++) {\r\n      const height = this.boardPosY + i * this.cellSize;\r\n      this.context.beginPath();\r\n      this.context.moveTo(this.boardPosX, height);\r\n      this.context.lineTo(boardRight, height);\r\n      this.context.closePath();\r\n      this.context.stroke();\r\n    }\r\n\r\n    // vertical lines\r\n    this.context.strokeStyle = this.borderColor;\r\n    const boardBottom = this.boardPosY + this.cellSize * this.board.height;\r\n    for (let i = 1; i < this.board.width; i++) {\r\n      const height = this.boardPosX + i * this.cellSize;\r\n      this.context.beginPath();\r\n      this.context.moveTo(height, this.boardPosY + HIDDEN_ROWS * this.cellSize);\r\n      this.context.lineTo(height, boardBottom);\r\n      this.context.closePath();\r\n      this.context.stroke();\r\n    }\r\n  }\r\n  drawBoard() {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.drawBorders();\r\n    this.drawGrid();\r\n    for (let i = HIDDEN_ROWS; i < this.board.height; i++) {\r\n      for (let j = 0; j < this.board.width; j++) {\r\n        if (this.board.board[i][j] != null) {\r\n          this.drawSquare(\r\n            this.boardPosX + j * this.cellSize,\r\n            this.boardPosY + i * this.cellSize,\r\n            this.board.board[i][j]\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawLevel(level) {\r\n    this.context.font = \"40px serif\";\r\n    this.context.fillStyle = \"#000000\";\r\n    this.context.fillText(`Level: ${level}`, this.levelPosX, this.levelPosY);\r\n  }\r\n\r\n  drawScore(score) {\r\n    this.context.font = \"40px serif\";\r\n    this.context.fillStyle = \"#000000\";\r\n    this.context.fillText(`Score: ${score}`, this.scorePosX, this.scorePosY);\r\n  }\r\n\r\n  drawPiecePreview(piece) {\r\n    const scoreBorder = [\r\n      this.previewX - this.borderThickness,\r\n      this.previewY - this.borderThickness,\r\n      this.borderThickness + this.previewX + 200,\r\n      this.borderThickness + this.previewY + 150,\r\n    ];\r\n\r\n    this.context.beginPath();\r\n    this.context.lineWidth = 1;\r\n    this.context.moveTo(scoreBorder[0], scoreBorder[1]);\r\n    this.context.lineTo(scoreBorder[2], scoreBorder[1]);\r\n    this.context.lineTo(scoreBorder[2], scoreBorder[3]);\r\n    this.context.lineTo(scoreBorder[0], scoreBorder[3]);\r\n    this.context.closePath();\r\n    this.context.strokeStyle = \"black\";\r\n    this.context.stroke();\r\n    const shape = piece.getShape();\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      for (let j = 0; j < shape[i].length; ++j) {\r\n        if (shape[i][j] != 0) {\r\n          this.drawSquare(\r\n            this.previewX + 30 + j * this.cellSize,\r\n            this.previewY + 35 + i * this.cellSize,\r\n            piece.color\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawPiece(piece, posX, posY) {\r\n    const shape = piece.getShape();\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      for (let j = 0; j < shape[i].length; ++j) {\r\n        if (shape[i][j] != 0) {\r\n          if (posY + i >= HIDDEN_ROWS) {\r\n            this.drawSquare(\r\n              this.boardPosX + (posX + j) * this.cellSize,\r\n              this.boardPosY + (posY + i) * this.cellSize,\r\n              piece.color\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawSquare(x, y, color) {\r\n    this.context.beginPath();\r\n\r\n    this.context.fillStyle = color;\r\n    this.context.fillRect(\r\n      x + 0.5,\r\n      y + 0.5,\r\n      this.cellSize - 1,\r\n      this.cellSize - 1\r\n    );\r\n  }\r\n\r\n  drawRestart() {\r\n    this.context.beginPath();\r\n    this.context.rect(500, 500, 250, 100);\r\n    this.context.fillStyle = \"#000000\";\r\n    this.context.fillStyle = \"rgba(225,225,225,0.5)\";\r\n    // this.context.fillRect(25, 72, 32, 32);\r\n    this.context.fill();\r\n    this.context.lineWidth = 2;\r\n    this.context.strokeStyle = \"#000000\";\r\n    this.context.stroke();\r\n    this.context.closePath();\r\n    this.context.font = \"40pt Serif\";\r\n    this.context.fillStyle = \"#000000\";\r\n    this.context.fillText(\"Restart\", 550, 570);\r\n  }\r\n\r\n  drawControls() {\r\n    this.context.font = \"20px serif\";\r\n    this.context.fillStyle = \"#000000\";\r\n    this.context.fillText(\"Controls:\", 550, 700);\r\n    this.context.fillText(\"Q/E - rotate\", 550, 720);\r\n    this.context.fillText(\"W/D or left/right arrows - left/right\", 550, 740);\r\n    this.context.fillText(\"S or down arrow - speed down\", 550, 760);\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","export const COUNTERCLOCKWISE = -1;\r\nexport const CLOCKWISE = 1;\r\nexport const HIDDEN_ROWS = 3;\r\n"],"sourceRoot":""}