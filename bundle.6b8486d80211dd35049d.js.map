{"version":3,"sources":["webpack:///./src/board.js","webpack:///./src/piece.js","webpack:///./src/game.js","webpack:///./src/l_piece.js","webpack:///./src/l2_piece.js","webpack:///./src/z_piece.js","webpack:///./src/z2_piece.js","webpack:///./src/t_piece.js","webpack:///./src/line_piece.js","webpack:///./src/o_piece.js","webpack:///./src/script.js","webpack:///./src/canvas.js","webpack:///./src/constants.js"],"names":["constructor","this","rotation_index","rotations","getShape","rotate","direction","limit","length","PIECES","Piece","super","color","RESTART","x","y","width","height","game","setDefaults","handleRestart","bind","board","Array","fill","map","clearLines","linesCleared","i","filledLine","j","splice","unshift","isSpotAvailable","piece","shape","placePiece","canvas","boardPosX","boardPosY","cellSize","levelPosX","levelPosY","scorePosX","scorePosY","previewX","previewY","boarderColor","borderThickness","document","querySelector","window","innerWidth","innerHeight","context","getContext","drawBorders","boardBorder","beginPath","lineWidth","moveTo","lineTo","closePath","strokeStyle","borderColor","stroke","drawGrid","boardRight","boardBottom","drawBoard","clearRect","drawSquare","drawLevel","level","font","fillStyle","fillText","drawScore","score","drawPiecePreview","scoreBorder","drawPiece","posX","posY","fillRect","drawRestart","rect","drawControls","state","gameSpeed","speedMode","speedAmount","numClears","timesCleared","startGame","lastRenderTime","Date","now","setNextPiece","requestAnimationFrame","tick","restartGame","removeEventListener","gameOver","currentPiece","render","rand","Math","floor","random","nextPiece","movePiece","dir","pieceX","pieceY","incrementPiece","addScore","placeNewPiece","rotatedPiece","Object","assign","create","getPrototypeOf","verifyRotation","offset","pow","addLevel","speedOn","speedOff","showRestart","addEventListener","getMousePos","event","getBoundingClientRect","clientX","left","clientY","top","isInside","pos","evt","mousePos","fired","key"],"mappings":"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","file":"bundle.6b8486d80211dd35049d.js","sourcesContent":["class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n    this.board = Array(this.height)\n      .fill()\n      .map(() => Array(this.width));\n  }\n\n  clearLines() {\n    let linesCleared = 0;\n    let i = this.height - 1;\n    while (i > 0) {\n      let filledLine = true;\n      for (let j = 0; j < this.width; j++) {\n        if (this.board[i][j] == null) {\n          filledLine = false;\n          break;\n        }\n      }\n\n      if (filledLine) {\n        this.board.splice(i, 1);\n        this.board.unshift(Array(this.width));\n        linesCleared++;\n      } else {\n        i--;\n      }\n    }\n    return linesCleared;\n  }\n\n  isSpotAvailable(piece, x, y) {\n    if (y >= this.height) return false;\n\n    const shape = piece.getShape();\n    for (let i = 0; i < shape.length; ++i) {\n      for (let j = 0; j < shape[i].length; ++j) {\n        if (shape[j][i] != 0) {\n          if (y + j >= this.height) return false;\n          if (x + i < 0 || x + i >= this.width) return false;\n          if (this.board[y + j][x + i] != null) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  placePiece(piece, x, y) {\n    const shape = piece.getShape();\n    for (let i = 0; i < shape.length; ++i) {\n      for (let j = 0; j < shape[i].length; ++j) {\n        if (shape[j][i] != 0) {\n          this.board[y + j][x + i] = piece.color;\n        }\n      }\n    }\n  }\n}\n\nexport default Board;\n","class Piece {\n  constructor() {\n    this.rotation_index = 0;\n    this.rotations = [];\n  }\n\n  getShape() {\n    return this.rotations[this.rotation_index];\n  }\n  rotate(direction) {\n    const limit = this.rotations.length;\n    this.rotation_index = this.rotation_index + direction;\n    if (this.rotation_index >= limit) {\n      this.rotation_index = 0;\n    }\n    if (this.rotation_index < 0) this.rotation_index = limit - 1;\n  }\n}\n\nexport default Piece;\n","import Board from \"./board\";\nimport Canvas from \"./canvas\";\nimport LinePiece from \"./line_piece\";\nimport LPiece from \"./l_piece\";\nimport L2Piece from \"./l2_piece\";\nimport OPiece from \"./o_piece\";\nimport ZPiece from \"./z_piece\";\nimport Z2Piece from \"./z2_piece\";\nimport TPiece from \"./t_piece\";\n\nconst PIECES = [LPiece, L2Piece, ZPiece, Z2Piece, TPiece, LinePiece, OPiece];\n\nconst ALIVE = 0;\nconst GAMEOVER = 1;\n\nconst RESTART = {\n  x: 500,\n  y: 500,\n  width: 250,\n  height: 100,\n};\n\nclass Game {\n  constructor() {\n    this.setDefaults();\n    this.handleRestart = this.handleRestart.bind(this);\n  }\n\n  setDefaults() {\n    this.board = new Board(10, 25);\n    this.canvas = new Canvas(this.board);\n    this.state = ALIVE;\n    this.gameSpeed = 1000;\n    this.speedMode = false;\n    this.speedAmount = 10;\n    this.level = 1;\n    this.score = 0;\n    this.numClears = 0;\n    this.timesCleared = 0;\n  }\n\n  startGame() {\n    this.lastRenderTime = Date.now();\n    this.setNextPiece();\n    window.requestAnimationFrame(this.tick.bind(this));\n  }\n\n  restartGame() {\n    this.setDefaults();\n    this.canvas.canvas.removeEventListener(\"click\", this.handleRestart, false);\n    this.startGame();\n  }\n\n  gameOver() {\n    this.state = GAMEOVER;\n    this.canvas.drawPiece(this.currentPiece);\n    this.canvas.drawRestart();\n    this.render();\n  }\n\n  setNextPiece() {\n    const rand = Math.floor(Math.random() * 7);\n    this.nextPiece = new PIECES[rand]();\n  }\n\n  movePiece(dir) {\n    const available = this.board.isSpotAvailable(\n      this.currentPiece,\n      this.pieceX + dir,\n      this.pieceY\n    );\n    if (available) this.pieceX += dir;\n    this.render();\n  }\n\n  incrementPiece() {\n    const available = this.board.isSpotAvailable(\n      this.currentPiece,\n      this.pieceX,\n      this.pieceY + 1\n    );\n\n    if (available) this.pieceY = this.pieceY + 1;\n    else {\n      this.board.placePiece(this.currentPiece, this.pieceX, this.pieceY);\n      const linesCleared = this.board.clearLines();\n\n      this.addScore(linesCleared);\n      this.placeNewPiece(this.currentPiece);\n    }\n  }\n\n  placeNewPiece() {\n    const piece = this.nextPiece;\n    this.setNextPiece();\n    this.currentPiece = piece;\n    this.pieceX = 3;\n    this.pieceY = 0;\n\n    const available = this.board.isSpotAvailable(\n      this.currentPiece,\n      this.pieceX,\n      this.pieceY\n    );\n    if (!available) this.gameOver();\n  }\n\n  rotate(direction) {\n    let rotatedPiece = Object.assign(\n      Object.create(Object.getPrototypeOf(this.currentPiece)),\n      this.currentPiece\n    );\n    rotatedPiece.rotate(direction);\n    const isValid = this.verifyRotation(rotatedPiece, 0);\n    if (isValid) this.currentPiece = rotatedPiece;\n    this.render();\n  }\n\n  // if the rotated piece doesn't fit its spot, attempt to shift it one right\n  // and then one left.  If no result fits, the piece does not rotate.\n  verifyRotation(piece, offset) {\n    const isValid = this.board.isSpotAvailable(\n      piece,\n      this.pieceX + offset,\n      this.pieceY\n    );\n    if (isValid) {\n      this.pieceX += offset;\n      return true;\n    }\n    if (offset == 0) return this.verifyRotation(piece, 1);\n    if (offset == 1) return this.verifyRotation(piece, -1);\n    return false;\n  }\n\n  addScore(linesCleared) {\n    if (linesCleared > 0) {\n      this.score += this.level * Math.pow(2, linesCleared - 1) * 100;\n      this.timesCleared++;\n      this.addLevel();\n    }\n  }\n  addLevel() {\n    if (this.timesCleared != 0 && this.timesCleared % 10 == 0) {\n      this.level++;\n      this.gameSpeed /= 2;\n    }\n  }\n\n  speedOn() {\n    this.speedMode = true;\n  }\n\n  speedOff() {\n    this.speedMode = false;\n  }\n  showRestart() {\n    const base = this;\n    this.canvas.canvas.addEventListener(\"click\", this.handleRestart, false);\n    this.canvas.drawRestart();\n  }\n\n  tick() {\n    if (this.state == GAMEOVER) {\n      this.showRestart();\n      return;\n    }\n    const elapsed = Date.now() - this.lastRenderTime;\n    const speed = this.speedMode ? this.speedAmount : this.gameSpeed;\n\n    if (elapsed > speed) {\n      this.canvas.drawBoard();\n      if (!this.currentPiece) this.placeNewPiece();\n      else this.incrementPiece();\n      this.render();\n\n      this.lastRenderTime = Date.now();\n    }\n    window.requestAnimationFrame(this.tick.bind(this));\n  }\n\n  render() {\n    this.canvas.drawBoard();\n    this.canvas.drawScore(this.score);\n    this.canvas.drawPiecePreview(this.nextPiece);\n    this.canvas.drawLevel(this.level);\n    this.canvas.drawControls();\n\n    if (this.state == GAMEOVER) {\n      this.showRestart();\n      return;\n    }\n\n    if (this.currentPiece)\n      this.canvas.drawPiece(this.currentPiece, this.pieceX, this.pieceY);\n  }\n\n  getMousePos(canvas, event) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top,\n    };\n  }\n\n  isInside(pos, rect) {\n    return (\n      pos.x > rect.x &&\n      pos.x < rect.x + rect.width &&\n      pos.y < rect.y + rect.height &&\n      pos.y > rect.y\n    );\n  }\n\n  handleRestart(evt) {\n    var mousePos = this.getMousePos(this.canvas.canvas, evt);\n    if (this.isInside(mousePos, RESTART)) {\n      this.restartGame();\n    }\n  }\n}\n\nexport default Game;\n","import Piece from \"./piece\";\n\nclass LPiece extends Piece {\n  constructor() {\n    super();\n    this.color = \"green\";\n    this.rotations = [\n      [\n        [0, 0, 1],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      [\n        [0, 1, 0],\n        [0, 1, 0],\n        [0, 1, 1],\n      ],\n      [\n        [0, 0, 0],\n        [1, 1, 1],\n        [1, 0, 0],\n      ],\n\n      [\n        [1, 1, 0],\n        [0, 1, 0],\n        [0, 1, 0],\n      ],\n    ];\n  }\n}\n\nexport default LPiece;\n","import Piece from \"./piece\";\n\nclass L2Piece extends Piece {\n  constructor() {\n    super();\n    this.color = \"red\";\n    this.rotations = [\n      [\n        [0, 0, 0],\n        [1, 1, 1],\n        [0, 0, 1],\n      ],\n      [\n        [0, 1, 0],\n        [0, 1, 0],\n        [1, 1, 0],\n      ],\n      [\n        [1, 0, 0],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n\n      [\n        [0, 1, 1],\n        [0, 1, 0],\n        [0, 1, 0],\n      ],\n    ];\n  }\n}\n\nexport default L2Piece;\n","import Piece from \"./piece\";\n\nclass ZPiece extends Piece {\n  constructor() {\n    super();\n    this.color = \"cyan\";\n    this.rotations = [\n      [\n        [0, 0, 0],\n        [1, 1, 0],\n        [0, 1, 1],\n      ],\n      [\n        [0, 0, 1],\n        [0, 1, 1],\n        [0, 1, 0],\n      ],\n    ];\n  }\n}\n\nexport default ZPiece;\n","import Piece from \"./piece\";\n\nclass Z2Piece extends Piece {\n  constructor() {\n    super();\n    this.color = \"orange\";\n    this.rotations = [\n      [\n        [0, 0, 0],\n        [0, 1, 1],\n        [1, 1, 0],\n      ],\n      [\n        [1, 0, 0],\n        [1, 1, 0],\n        [0, 1, 0],\n      ],\n    ];\n  }\n}\n\nexport default Z2Piece;\n","import Piece from \"./piece\";\n\nclass TPiece extends Piece {\n  constructor() {\n    super();\n    this.color = \"pink\";\n    this.rotations = [\n      [\n        [0, 1, 0],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      [\n        [0, 1, 0],\n        [0, 1, 1],\n        [0, 1, 0],\n      ],\n      [\n        [0, 0, 0],\n        [1, 1, 1],\n        [0, 1, 0],\n      ],\n\n      [\n        [0, 1, 0],\n        [1, 1, 0],\n        [0, 1, 0],\n      ],\n    ];\n  }\n}\n\nexport default TPiece;\n","import Piece from \"./piece\";\n\nclass LinePiece extends Piece {\n  constructor() {\n    super();\n    this.color = \"blue\";\n    this.rotations = [\n      [\n        [0, 0, 0, 0],\n        [1, 1, 1, 1],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      [\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n      ],\n    ];\n  }\n}\n\nexport default LinePiece;\n","import Piece from \"./piece\";\n\nclass OPiece extends Piece {\n  constructor() {\n    super();\n    this.color = \"yellow\";\n    this.rotations = [\n      [\n        [1, 1],\n        [1, 1],\n      ],\n    ];\n  }\n}\n\nexport default OPiece;\n","import Board from \"./board\";\nimport Canvas from \"./canvas\";\nimport Game from \"./game\";\nimport \"./style.css\";\nimport { CLOCKWISE, COUNTERCLOCKWISE } from \"./constants\";\nconst LEFT = -1;\nconst RIGHT = 1;\n\nconst game = new Game();\ngame.startGame();\n\nlet fired = false;\nwindow.addEventListener(\"keydown\", function (event) {\n  if (fired) return;\n  fired = true;\n  event.key;\n  switch (event.key) {\n    case \"ArrowLeft\":\n    case \"a\":\n      game.movePiece(LEFT);\n      break;\n    case \"ArrowRight\":\n    case \"d\":\n      game.movePiece(RIGHT);\n      break;\n    case \"ArrowDown\":\n    case \"s\":\n      game.speedOn();\n      break;\n    case \"q\":\n      game.rotate(COUNTERCLOCKWISE);\n      break;\n    case \"e\":\n    case \"w\":\n    case \"ArrowUp\":\n      game.rotate(CLOCKWISE);\n      break;\n    default:\n      fired = false;\n\n      return;\n  }\n  fired = false;\n});\n\nwindow.addEventListener(\"keyup\", function (event) {\n  switch (event.key) {\n    case \"ArrowDown\":\n    case \"s\":\n      game.speedOff();\n      break;\n    default:\n      return;\n  }\n});\n","import Board from \"./board\";\nimport { HIDDEN_ROWS } from \"./constants\";\n\n// this class focuses on how to draw elements\nclass Canvas {\n  constructor(board) {\n    this.boardPosX = 28;\n    this.boardPosY = 28;\n    this.cellSize = 28;\n\n    this.levelPosX = 450;\n    this.levelPosY = 375;\n    this.scorePosX = 450;\n    this.scorePosY = 428;\n\n    this.previewX = 400;\n    this.previewY = 120;\n\n    this.board = board;\n    this.boarderColor = \"#fff\";\n    this.borderThickness = 0.5;\n\n    this.canvas = document.querySelector(\"canvas.tetris\");\n\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n    this.context = this.canvas.getContext(\"2d\");\n  }\n\n  drawBorders() {\n    const boardBorder = [\n      this.boardPosX - this.borderThickness,\n      this.boardPosY + HIDDEN_ROWS * this.cellSize - this.borderThickness,\n      this.borderThickness + this.boardPosX + this.board.width * this.cellSize,\n      this.borderThickness + this.boardPosY + this.board.height * this.cellSize,\n    ];\n    this.context.beginPath();\n    this.context.lineWidth = 1;\n    this.context.moveTo(boardBorder[0], boardBorder[1]);\n    this.context.lineTo(boardBorder[2], boardBorder[1]);\n    this.context.lineTo(boardBorder[2], boardBorder[3]);\n    this.context.lineTo(boardBorder[0], boardBorder[3]);\n    this.context.closePath();\n    this.context.strokeStyle = this.borderColor;\n\n    this.context.stroke();\n  }\n\n  drawGrid() {\n    // horizontal lines\n    this.context.strokeStyle = this.borderColor;\n    this.context.lineWidth = 0.5;\n\n    const boardRight = this.boardPosX + this.cellSize * this.board.width;\n    for (let i = 3; i < this.board.height; i++) {\n      const height = this.boardPosY + i * this.cellSize;\n      this.context.beginPath();\n      this.context.moveTo(this.boardPosX, height);\n      this.context.lineTo(boardRight, height);\n      this.context.closePath();\n      this.context.stroke();\n    }\n\n    // vertical lines\n    this.context.strokeStyle = this.borderColor;\n    const boardBottom = this.boardPosY + this.cellSize * this.board.height;\n    for (let i = 1; i < this.board.width; i++) {\n      const height = this.boardPosX + i * this.cellSize;\n      this.context.beginPath();\n      this.context.moveTo(height, this.boardPosY + HIDDEN_ROWS * this.cellSize);\n      this.context.lineTo(height, boardBottom);\n      this.context.closePath();\n      this.context.stroke();\n    }\n  }\n  drawBoard() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBorders();\n    this.drawGrid();\n    for (let i = HIDDEN_ROWS; i < this.board.height; i++) {\n      for (let j = 0; j < this.board.width; j++) {\n        if (this.board.board[i][j] != null) {\n          this.drawSquare(\n            this.boardPosX + j * this.cellSize,\n            this.boardPosY + i * this.cellSize,\n            this.board.board[i][j]\n          );\n        }\n      }\n    }\n  }\n\n  drawLevel(level) {\n    this.context.font = \"40px serif\";\n    this.context.fillStyle = \"#000000\";\n    this.context.fillText(`Level: ${level}`, this.levelPosX, this.levelPosY);\n  }\n\n  drawScore(score) {\n    this.context.font = \"40px serif\";\n    this.context.fillStyle = \"#000000\";\n    this.context.fillText(`Score: ${score}`, this.scorePosX, this.scorePosY);\n  }\n\n  drawPiecePreview(piece) {\n    const scoreBorder = [\n      this.previewX - this.borderThickness,\n      this.previewY - this.borderThickness,\n      this.borderThickness + this.previewX + 200,\n      this.borderThickness + this.previewY + 150,\n    ];\n\n    this.context.beginPath();\n    this.context.lineWidth = 1;\n    this.context.moveTo(scoreBorder[0], scoreBorder[1]);\n    this.context.lineTo(scoreBorder[2], scoreBorder[1]);\n    this.context.lineTo(scoreBorder[2], scoreBorder[3]);\n    this.context.lineTo(scoreBorder[0], scoreBorder[3]);\n    this.context.closePath();\n    this.context.strokeStyle = \"black\";\n    this.context.stroke();\n    const shape = piece.getShape();\n    for (let i = 0; i < shape.length; ++i) {\n      for (let j = 0; j < shape[i].length; ++j) {\n        if (shape[i][j] != 0) {\n          this.drawSquare(\n            this.previewX + 30 + j * this.cellSize,\n            this.previewY + 35 + i * this.cellSize,\n            piece.color\n          );\n        }\n      }\n    }\n  }\n\n  drawPiece(piece, posX, posY) {\n    const shape = piece.getShape();\n    for (let i = 0; i < shape.length; ++i) {\n      for (let j = 0; j < shape[i].length; ++j) {\n        if (shape[i][j] != 0) {\n          if (posY + i >= HIDDEN_ROWS) {\n            this.drawSquare(\n              this.boardPosX + (posX + j) * this.cellSize,\n              this.boardPosY + (posY + i) * this.cellSize,\n              piece.color\n            );\n          }\n        }\n      }\n    }\n  }\n\n  drawSquare(x, y, color) {\n    this.context.beginPath();\n\n    this.context.fillStyle = color;\n    this.context.fillRect(\n      x + 0.5,\n      y + 0.5,\n      this.cellSize - 1,\n      this.cellSize - 1\n    );\n  }\n\n  drawRestart() {\n    this.context.beginPath();\n    this.context.rect(500, 500, 250, 100);\n    this.context.fillStyle = \"#000000\";\n    this.context.fillStyle = \"rgba(225,225,225,0.5)\";\n    // this.context.fillRect(25, 72, 32, 32);\n    this.context.fill();\n    this.context.lineWidth = 2;\n    this.context.strokeStyle = \"#000000\";\n    this.context.stroke();\n    this.context.closePath();\n    this.context.font = \"40pt Serif\";\n    this.context.fillStyle = \"#000000\";\n    this.context.fillText(\"Restart\", 550, 570);\n  }\n\n  drawControls() {\n    this.context.font = \"20px serif\";\n    this.context.fillStyle = \"#000000\";\n    this.context.fillText(\"Controls:\", 550, 700);\n    this.context.fillText(\"Q/E - rotate\", 550, 720);\n    this.context.fillText(\"W/D or left/right arrows - left/right\", 550, 740);\n    this.context.fillText(\"S or down arrow - speed down\", 550, 760);\n  }\n}\n\nexport default Canvas;\n","export const COUNTERCLOCKWISE = -1;\nexport const CLOCKWISE = 1;\nexport const HIDDEN_ROWS = 3;\n"],"sourceRoot":""}